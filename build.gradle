plugins {
	id 'org.springframework.boot' version '2.7.2'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'java'
	id 'jacoco'
	id "org.sonarqube" version "3.4.0.2513"
}

group = 'com.sofa'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'org.springframework.boot:spring-boot-starter-data-rest'
	implementation 'org.springframework.boot:spring-boot-starter-hateoas'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.data:spring-data-rest-hal-explorer'
	implementation "org.springdoc:springdoc-openapi-ui:1.6.8"
	implementation "org.springdoc:springdoc-openapi-webmvc-core:1.6.8"
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	annotationProcessor 'org.projectlombok:lombok'
	testAnnotationProcessor 'org.projectlombok:lombok'
	testCompileOnly 'org.projectlombok:lombok'
	testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
}

test {
	useJUnitPlatform()
	finalizedBy jacocoTestReport
}

jacocoTestReport {
	dependsOn test
	reports {
		xml.enabled true
		csv.enabled true
	}
}

jacocoTestCoverageVerification {
	violationRules {
		rule {
			limit {
				minimum = 0.90
			}
		}
		rule {
			element = 'CLASS'
			excludes = [
				'com.sofa.pilot.domain.BaseDomain',
				'com.sofa.pilot.PilotApplication',
				'com.sofa.pilot.config.PropertyLoader'
			]
			limit {
				minimum = 0.90
			}
		}
	}
}

check.dependsOn jacocoTestCoverageVerification

jacoco {
    toolVersion = "0.8.8"
    reportsDirectory = layout.buildDirectory.dir('jacocoReport')
}

sonarqube {
    properties {
        //property 'sonar.host.url', 'http://35.92.163.147:8080'
        //property "sonar.login", "squ_a7e0d6562ca26d406fd5293f2f6b60ba8aef0bb7"
        property "sonar.projectKey", "deploy"
        property 'sonar.projectName', 'school'
        //property 'sonar.java.source', 11
        //property 'sonar.junit.reportPaths', 'build/results'
        //property 'encoding', 'UTF-8'
        //property 'charSet', 'UTF-8'
        //property "sonar.coverage.jacoco.xmlReportPaths", "path.xml"
    }
}
